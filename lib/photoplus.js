// Generated by CoffeeScript 1.9.1
(function() {
  define(['jquery', 'flight/lib/component'], function($, defineComponent) {
    var photoPlus;
    photoPlus = function() {
      this.defaultAttrs({
        gallerySelector: ".scrollableArea",
        leftHotspotSelector: ".scrollingHotSpotLeft",
        rightHotspotSelector: ".scrollingHotSpotRight",
        imageCounterSelector: ".scroll_image_counter",
        processing: false,
        currentImage: 1,
        resultSelector: '#photo_plus_result_',
        pinSelector: '#photo_plus_pin_',
        offset: 5,
        imagesToLoad: 4,
        imageCountFormat: ':current/:total',
        dimensions: '180-180'
      });
      this.current = function(image) {
        if (image == null) {
          image = this.attr.currentImage;
        }
        if (this.total() === 0) {
          this.attr.currentImage = 0;
        }
        return this.attr.currentImage = image;
      };
      this.dataSelector = function() {
        var pinSelector, resultSelector;
        resultSelector = $(this.attr.resultSelector + this.listingId);
        pinSelector = this.attr.pinSelector + this.listingId;
        if (resultSelector && resultSelector.length > 0) {
          return resultSelector;
        } else {
          return $(pinSelector);
        }
      };
      this.total = function() {
        return this.dataSelector().data('num_media');
      };
      this.includeFloorplans = function() {
        var result;
        result = this.dataSelector().data('floorplans_flag');
        return Boolean(result);
      };
      this.gallery = function() {
        return this.select('gallerySelector');
      };
      this.populateGallery = function(media) {
        this.gallery().width(this.galleryWidth);
        if (this.galleryPopulated()) {
          return;
        }
        if (this.includeFloorplans) {
          this.photos = media.photos.concat(media.floorplans);
        }
        $(this.photos.slice(1, 5)).each((function(_this) {
          return function(index, photo) {
            var html, imageServer;
            imageServer = _this.pickServer(index);
            html = "<a href='" + _this.href + "'>";
            html += "<img src='" + imageServer + (_this.addSize(photo.path)) + "' ";
            html += "width='" + _this.imageWidth + "px' height='105px'></a>";
            return _this.gallery().append(html);
          };
        })(this));
        return this.gallery().find("img:first").addClass('current');
      };
      this.addSize = function(path) {
        var pathWithSlash;
        pathWithSlash = path.substr(-1) === '/' ? path : path + "/";
        return "" + pathWithSlash + this.attr.dimensions;
      };
      this.galleryPhotoCount = function() {
        return this.gallery().find('a').length;
      };
      this.galleryPopulated = function() {
        return this.galleryPhotoCount() > 1;
      };
      this.imageCount = function() {
        return this.attr.imageCountFormat.replace(":current", this.current()).replace(":total", this.total());
      };
      this.next = function() {
        var image;
        if (!this.galleryPopulated()) {
          this.trigger('uiWantsListingMedia', {
            listingId: this.listingId
          });
        }
        image = this.current();
        if (image !== this.total()) {
          this.current(image += 1);
          this.updateCounter(image);
          if (this.attr.currentImage + 2 === this.attr.offset) {
            this.getMoreImages();
          }
          return this.browse('right');
        }
      };
      this.previous = function() {
        var image;
        image = this.current();
        if (image !== 1) {
          this.current(image -= 1);
          this.updateCounter(image);
          return this.browse('left');
        }
      };
      this.updateCounter = function(num) {
        this.select('gallerySelector').find('img.current').removeClass('current');
        this.select('gallerySelector').find("a:nth-child(" + num + ") img").addClass('current');
        return this.select('imageCounterSelector').html(this.imageCount());
      };
      this.getMoreImages = function() {
        $(this.photos.slice(this.attr.offset, +(this.attr.offset + this.attr.imagesToLoad - 1) + 1 || 9e9)).each((function(_this) {
          return function(index, photo) {
            var html, imageServer;
            imageServer = _this.pickServer(index);
            html = "<a href='" + _this.href + "'>";
            html += "<img src='" + imageServer + (_this.addSize(photo.path)) + "' ";
            html += "width='" + _this.imageWidth + "px' height='105px'></a>";
            return _this.gallery().append(html);
          };
        })(this));
        return this.attr.offset += this.attr.imagesToLoad;
      };
      this.browse = function(direction) {
        var options;
        if (!this.processing) {
          this.processing = true;
          options = (function() {
            switch (direction) {
              case 'left':
                return {
                  right: "-=" + this.imageWidth + "px"
                };
              default:
                return {
                  right: "+=" + this.imageWidth + "px"
                };
            }
          }).call(this);
          return this.select('gallerySelector').animate(options, 400, (function(_this) {
            return function() {
              return _this.processing = false;
            };
          })(this));
        }
      };
      this.pickServer = function(num) {
        var server, val;
        val = num % 2;
        if (val === 0) {
          return server = 'http://image.apartmentguide.com';
        } else {
          return server = 'http://image1.apartmentguide.com';
        }
      };
      return this.after('initialize', function() {
        this.href = this.$node.find('a').attr('href');
        this.imageWidth = this.$node.width();
        this.listingId = this.$node.closest('.result').attr('id').split("_")[1];
        this.galleryWidth = this.imageWidth * this.total();
        this.select('imageCounterSelector').html(this.imageCount());
        this.on('click', {
          rightHotspotSelector: this.next,
          leftHotspotSelector: this.previous
        });
        return this.on('dataListingMedia', function(event, data) {
          return this.populateGallery(data);
        });
      });
    };
    return defineComponent(photoPlus);
  });

}).call(this);
